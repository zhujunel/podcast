<style lang="scss">
  .example--box {
    z-index:0;
    display:block;
    position:relative;
    margin:30rpx 30rpx 0 30rpx;
    box-sizing:border-box;
    background:#fff;
    box-shadow:0 5px 10px 0 rgba(0,0,0,0.05);
    border-radius:12rpx;
  }

  .demo{
    padding: 15rpx;
    /* background: #f6f6f6; */
  }

  .demo-inner{
    background: #fff;
  }

  .meta {
    position: relative;
    margin-top: 40rpx;
    border-top: 1rpx solid #e9e9e9;
    padding: 20rpx 15rpx 15rpx 20rpx;
  }

  .meta-title {
    position: absolute;
    top: -24rpx;
    line-height: 26rpx;
    padding: 10rpx 14rpx;
    font-size: 26rpx;
    color: #555;
    border-radius: 8rpx;
    background: #f2f2f2;
    transition: background-color .4s ease;
  }

  .meta-desc {
    margin-top: 20rpx;
    color: #777;
    font-size: 24rpx;
  }

  .example--source {
    position: relative;
  }

  .view-btn{
    position: absolute;
    right: 20rpx;
    top: -52rpx;
    color: #369;
    opacity: .5;
    font-size: 26rpx;
  }
</style>

<template>
  <view class="example--box">
    <view class="example--demo demo">
      <view class="demo-inner">
        <slot></slot>
      </view>
    </view>
    <view class="example--meta meta">
      <view class="meta-title">{{title}}</view>
      <view class="meta-desc">{{desc}}</view>
    </view>
    <view class="example--source">
      <view class="view-btn {{viewSourceClass}}" @tap="bindViewSourceEvent">{{ isExpandSource ? 'Hide' : 'Show' }} Code</view>
      <content wx:if="{{isExpandSource}}" content="{{source}}" type="demo"></content>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Content from './content'
  export default class Demo extends wepy.component {
    components = {
      content: Content
    }
    props = {
      title: {
        type: String,
        value: '示例标题'
      },
      desc: {
        type: String,
        value: '示例描述'
      },
      source: {
        type: String,
        value: ''
      }
    }

    data = {
      viewSourceClass: 'source-isclose',
      isExpandSource: false
    }
    methods = {
      bindViewSourceEvent () {
        this.isExpandSource = !this.isExpandSource
      }
    }
  }
</script>
