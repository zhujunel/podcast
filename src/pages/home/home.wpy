<template>

  <view class="body">
    <view wx:if="{{currentTab === 0}}">
      <ad-swiper :config.sync="swiper"></ad-swiper>
    </view>
    <view class="tab_item">
      <repeat for="{{page.list}}" key="index" index="index" item="item">
        <podcast-card :item.sync="item" :id="item.id" style="margin-top: 20px"></podcast-card>
      </repeat>
      <Loadmore :page.sync="page"></Loadmore>
      <!-- 加载提示 -->
      <view style="height: 100rpx;"></view>
    </view>
    <me class="tab_item" wx:if="{{currentTab === 1}}"/>
    <tab-bar :active.sync="currentTab" :curplay.sync="curplay"/>
  </view>
</template>

<script>

  /* eslint-disable no-undef,no-throw-literal,no-unused-expressions,no-unused-vars */
  import wepy from 'wepy'
  import base from '../../mixins/_base'
  import pagination from '../../mixins/pagination'

  import auth from '../../api/auth'
  import app from '../../api/app'
  import podcast from '../../api/podcast'
  import Cache from '../../utils/Cache'
  import Tips from '../../utils/Tips'
  //  import WxUtils from '../../utils/WxUtils'
  import Event from '../../utils/Event'
  //  import Copyright from '../../components/common/copyright'
  import Loadmore from '../../components/ui/loadmore'
  import AdSwiper from '../../components/AdSwiper'
  import TabBar from '../../components/TabBar'
  import Me from '../../components/profile'
  import PodcastCard from '../../components/podcast-card'

  import moment from 'moment'

  const $wxapp = wepy.$instance

  export default class AppHome extends wepy.page {
    def = {
      init: false,
      app: {},
      status: null,
      appTitle: '育儿柚道',
      reduce: null,
      share: null,
      notices: null,
      currentTab: 0,
      swiper: {},
      curplay: {
        title: '',
        authorInfo: {}
      },
      page: {
        added: [],
        list: []
      }
    }
    data = {...this.def}

    async onLoad ({sence}) {
      await auth.login()
      this.app = await Cache.app()
      this.swiper = this.app.swiper
      // 获取推广的节目内容
      const sticky = await app.getSticky(this.app.stickys[0])
      this.curplay = Object.assign({}, sticky, {play_status: 'stop'})
      $wxapp.globalData.curplay = this.curplay
      this.page = podcast.page()
      await this.next()
      for (let item of this.page.list) {
        item._ = {
          header_collapsed: false,
          expanded: true
        }
        item.modified = moment(item.modified).fromNow()
//        item.list = await podcast.loadEpisodes(item)
//        item.loaded = true
      }
      //      await this.loadDataItems()
      this.loaded()
//      await this.next()
      this.preload()
      Event.on(Event.LOADED, async () => {
//        for (let i of this.page.list) {
//          if (!i.loaded) {
//            i.list = await podcast.loadEpisodes(i)
//            i.loaded = true
//            this.loaded()
//          }
//        }
      })

//      $wxapp.emitter.emit('tab-change')
//      this.$apply()
      $wxapp.emitter.on('tab-change', async (active) => {
        console.log('tab-change ve')
        if (active === 1) {
          this.$invoke('me', 'onShow')
        } else {
          await this.onShow()
        }
      })
    }

    async loadEpisodes (item) {

    }

    /**
     * 到达底部
     */
//    async onReachBottom () {
//      console.log('到底部。。。。')
//      await this.next().then((me) => {
//        console.log(me)
//      })
//    }
    async onShow () {
      this.currentTab = 0
    }

    watch = {
      'page': (newValue, oldValue) => {
//        if (newValue !== oldValue) {
//          for (let item of this.page.list) {
//            (async () => {
//              if (!item.loaded) {
//                const data = await podcast.loadEpisodes(i)
//                item.list = data
//                this.$apply()
//              }
//            })()
//          }
//        }
        //        if (oldValue.added) {
//          for (let item of newValue.added) {
//            for (let i of this.page.list) {
//              if (item.id === i.id) {
//                console.log(item.id + 'xxxx')
//                (async () => {
//                  const data = await podcast.loadEpisodes(i)
//                  i.list = data
//                  this.$apply()
//                })()
//              }
//            }
//          }
//        }
      }
    }

    preload () {
//      Event.on(Event.PODCAST_LIST_UPDATE, async (item) => {
//        await podcast.loadEpisodes(item, item.id)
//      })
//      Tips.setLoading()
      // 推荐的内容信息 内容列表
      // 状态信息/推荐商品异步加载
//      Cache.status().then(status => {
//        this.status = status;
//        return goods.page(true).next();
//      }).then(({list}) => {
//        if (list.length > 5) {
//          this.goods = list.slice(0, 5);
//        } else {
//          this.goods = list;
//        }
//        return Cache.reduce();
//      }).then(data => {
//        this.reduce = data;
//        return Cache.notices();
//      }).then(data => {
//        this.notices = data.filter(item => item.isHome == 1);
//        this.loaded();
//      });
//      // 页面缓存预加载
//      Cache.categories().then();
//      Cache.coupon().then(({ownList}) => {
//        this.coupon = ownList.length;
//        this.$apply();
//      });
    }

    onShareAppMessage () {
      return {}
    }

    methods = {
      share () {
        Tips.modal('当前版本过低，请更新微信或点击右上角进行分享')
      }
    }

    components = {
      'Loadmore': Loadmore,
      'tab-bar': TabBar,
      'ad-swiper': AdSwiper,
      me: Me,
      'podcast-card': PodcastCard
    }
    mixins = [base, pagination]
    config = {
      navigationBarTitleText: '育儿柚道',
      enablePullDownRefresh: true
    }
  }
</script>

<style lang="scss">
  .gridicon {
    fill: currentColor;

    &.needs-offset g {
      transform: translate(1px, 1px); /* translates to .5px because it's in a child element */
    }

    &.needs-offset-x g {
      transform: translate(1px, 0); /* only nudges horizontally */
    }

    &.needs-offset-y g {
      transform: translate(0, 1px); /* only nudges vertically */
    }
  }

  /*@import '../stylesheets/style';*/

  .tab_item {
    height: 100%;
  }

  page, .body {
    height: 100%;
    font-family: '\5FAE\8F6F\96C5\9ED1', arial;
    /*background-color: #f0eff5;*/
  }
</style>
