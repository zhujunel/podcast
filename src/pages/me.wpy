<style type="scss">
  $bgcolor: #EFEFF4;
  .me {
    background-color: $bgcolor;
    height: 100%;
    padding-top: 40rpx;
    .info {
      display: flex;
      flex-direction: column;
      align-items: center;
      .avatar {
        width: 130rpx;
        height: 130rpx;
        border-radius: 50%;
      }
      .nickname {
        color: #aaa;
        padding: 10px;
        font-size: 32repx;
      }
    }
    .item {
      background-color: #fff;
      height: 100rpx;
      position: relative;
      box-sizing: border-box;
      padding: 15rpx 25rpx;
      border-bottom: 1px solid #eee;
    }
  }

  $border: 1px solid #eeeeee;
  .list {
    margin-top: 40rpx;
    background-color: #fff;
    border-bottom: $border;
    .item {
      height: 100rpx;
      position: relative;
      /*-webkit-box-sizing: border-box;*/
      /*-moz-box-sizing: border-box;*/
      box-sizing: border-box;
      padding: 20rpx;
      border-bottom: $border;
      .icon {
        width: 60rpx;
        height: 60rpx;
        position: absolute;
        margin-left: 15rpx;
    }
      .arrow_left {
        position: absolute;
        right: 20rpx;
        width: 30rpx;
        height: 40rpx;
        margin-top: -32rpx;
    }
      .title {
        padding: 18rpx 0 0 100rpx;
        display: block;
        font-size: 33rpx;
    }
  }
  }
</style>
<template>

  <view class="me">
    <view class="info" @tap="handleViewTap">
      <image class="avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="nickname">{{ userInfo.nickName }}</view>
    </view>

    <view class="list">
      <!--<block wx:for-items="{{list}}" wx:for-index="index" wx:for-item="item">-->
        <view class="item">
          <image class="icon" src="../../images/podcast_on.png"></image>
          <text class="title">我的柚道</text>
          <image class="arrow_left" src="../images/arrow_left.png"></image>
        </view>
        <view class="item">
          <image class="icon" src="../../images/podcast_on.png"></image>
          <text class="title">我的订阅</text>
          <image class="arrow_left" src="../images/arrow_left.png"></image>
        </view>
        <view class="item">
          <image class="icon" src="../../images/ask_on.png"></image>
          <text class="title">我的提问</text>
          <image class="arrow_left" src="../images/arrow_left.png"></image>
        </view>
      <!--</block>-->
    </view>
    <!--<album :list="dAlbum"/>-->
    <!--<emoji :list="dSetting"/>-->
    <!--<setting :list="dEmoji"/>-->
  </view>
</template>
<script>
  /* eslint-disable no-return-assign,no-unexpected-multiline,no-sequences */

  import wepy from 'wepy'
  import List from '../components/list'
  import api from '../common/api'

  export default class Me extends wepy.page {
    components = {
      album: List,
      emoji: List,
      setting: List
    }

    data = {
      userInfo: {
        nickName: 'Basil',
        id: 'basil',
        avatarUrl: wepy.env === 'web' ? './images/myheader.png' : '../images/myheader.png'
      },
      dAlbum: [
        {icon: wepy.env === 'web' ? './images/album.png' : '../images/album.png', title: '相册'},
        {icon: wepy.env === 'web' ? './images/collect.png' : '../images/collect.png', title: '收藏'},
        {icon: wepy.env === 'web' ? './images/wallet.png' : '../images/wallet.png', title: '钱包'},
        {icon: wepy.env === 'web' ? './images/card.png' : '../images/card.png', title: '卡包'}
      ],
      dSetting: [
        {
          id: 'clear',
          icon: '../images/setting.png',
          title: '清除本地聊天记录',
          action () {
            this.clearHistory()
          }
        }
      ],
      dEmoji: [{icon: wepy.env === 'web' ? './images/emoji.png' : '../images/emoji.png', title: '表情'}]
    }
    methods = {}
    onLoad () {
      console.log('set userinfo')
      this.setUserInfo()
    }
    async setUserInfo () {
      let res
      try {
        res = await api.getUserInfo()
      } catch (e) {
        console.log(e)
        res = this.userInfo
      }
      console.log(res)
      ['nickName', 'avatarUrl'].forEach((v) => this.userInfo[v] = res[v])
      this.$apply()
    }
    async clearHistory (id) {
//      await api.clearMsg(id)
//      this.$root.$navigate({url: 'index'})
    }
  }

</script>
