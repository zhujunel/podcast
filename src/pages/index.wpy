<style lang="scss">
  .gridicon {
    fill: currentColor;

    &.needs-offset g {
      transform: translate(1px, 1px); /* translates to .5px because it's in a child element */
    }

    &.needs-offset-x g {
      transform: translate(1px, 0); /* only nudges horizontally */
    }

    &.needs-offset-y g {
      transform: translate(0, 1px); /* only nudges vertically */
    }
  }

  @import '../stylesheets/style';

  .is-placeholder {
    color: transparent;
    width: 36%;
    line-height: 24px;
    margin-top: 8px;
    background-color: lighten($gray, 30%);
    animation: loading-fade 1.6s ease-in-out infinite;

    &:before {
      content: ' ';
    }
  }
  .podcast__header {
    display: flex;
    text {
      flex: 2;
      display: block;
      overflow: hidden;
      margin-top: 16rpx;
    }
    .podcast-icon {
      margin-left: 0px;
      float: left;
      margin-right: 16rpx;
      width: 80rpx;
      height: 80rpx;
      position: relative;
      transition: opacity .15s ease-in-out;

      &.is-placeholder {
        background-color: lighten($gray, 30%);
        animation: loading-fade 1.6s ease-in-out infinite;
        opacity: 0.3;
      }
      &.is-fallback {
        background: lighten($gray, 20%);
      }
    }
  }
  .podcasts-browser__main-header {
    background: $white;
    box-shadow: 0 0 0 1px transparentize( lighten( $gray, 20% ), 0.5 ), 0 1px 2px lighten( $gray, 30% );
    flex-direction: column;
    display: flex;
    margin-bottom: 9px;

  }

  .podcasts-browser__main-header .section-nav {
    border: 1px solid transparentize( lighten( $gray, 20% ), 0.5 );
    border-width: 0 0 1px;
    box-shadow: none;
    flex: auto;
    margin: 0;

  }
  .section-nav {
    position: relative;
    width: 100%;
    padding: 0;
    margin: 0 0 17px 0;
    background: $white;
    box-sizing: border-box;
    box-shadow: 0 0 0 1px transparentize( lighten( $gray, 20% ), .5 ),
    0 1px 2px lighten( $gray, 30% );

    &.has-pinned-items {
      padding-right: 50px;
    }
    margin-bottom: 9px;
  }

  .section-nav__panel {
    box-sizing: border-box;
    width: 100%;
    display: flex;
    align-items: center;
  }

  .section-nav-group {
    position: relative;
    border-top: solid 1px lighten( $gray, 20% );

    margin-top: 0;
    padding-top: 0;
    border-top: none;
  }

  .section-nav__button {
    width: 100%;
    margin-top: 24px;
  }
  .section-nav__hr {
    background: lighten( $gray, 30 );
  }

  .section-nav-group__label {
    display: none;
    margin-bottom: 8px;
    padding: 0 15px;
    font-size: 11px;
    color: $gray;
    font-weight: 600;
    text-transform: uppercase;
    line-height: 12px;
  }
  .section-nav-group__label-text {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }

  // -------- Nav Items --------
  .section-nav-tab .count {
    margin-left: 8px;
  }
  .section-nav-tabs {
      width: 0;
      flex: 1 0 auto;

  }
  .section-nav-tabs__list {
    margin: 0;
    display: flex;
    width: 100%;
  }

  // -------- Nav Tabs - individual tab --------
  .section-nav-tab {
    width: auto;
    flex: none;
    border-bottom: 2px solid transparent;
    border-top: none;
    text-align: center;

    &.is-selected {
      border-bottom-color: $gray-dark;
    }
  }
  .section-nav-tab__link,
  .section-nav-tab__text {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .section-nav-tab__link {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    padding: 15px;
    width: 100%;
    font-size: 14px;
    font-weight: 600;
    line-height: 18px;
    color: $gray-dark;
    cursor: pointer;

    &:visited {
      color: $gray-dark;
    }

    &[disabled],
    .notouch &[disabled]:hover {
      color: lighten( $gray, 30% );
      cursor: default;
    }

    .is-selected & {
      color: $white;
      background-color: $blue-medium;

    }

    &:focus {
      outline: none;
      .accessible-focus & {
        outline: solid $gray 1px;
      }
    }

    .notouch & {
      &:hover {
        color: $blue-medium;
      }
    }

    .notouch .is-selected & {
      &:hover {
        color: $white;
      }
    }

    display: block;
    width: auto;
    padding: 16px 16px 14px 16px;
    color: $blue-wordpress;
    font-weight: 400;

    &:visited {
      color: $blue-wordpress;
    }

    .is-selected & {
      color: $gray-dark;
      background-color: transparent;

      &:after {
        display: none;
      }
    }

    .notouch .is-selected & {
      &:hover {
        color: $gray-dark;
      }
    }
  }
  .section-nav-tab__text {
    /*display: block;*/
    /*flex: 1 0 auto;*/
    /*width: 0;*/
    /*color: inherit;*/

    display: inline;
    flex: none;
    width: auto;
  }
  .section-nav-tab__title {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    padding: 15px;
    width: 100%;
    font-size: 14px;
    line-height: 18px;
    color: $gray-dark;
  }
  // -------- Nav Segmented Control --------
  .section-nav__segmented {

    .segmented-control {
      margin: 0 15px;
    }

    .segmented-control__link {
      padding: 3px 16px 5px;
    }
  }


  .podcasts-browser-item {
    border-left: 1px solid lighten( $gray, 30% );
    box-sizing: border-box;
    cursor: pointer;
    display: block;
    float: left;
    margin: 0;
    position: relative;
    overflow: hidden;

    &.is-placeholder,
    &.is-empty {
      cursor: default;
    }

    .podcasts-browser-item__link {
      padding: 16px 16px 48px;
      display: block;
    }

    @include breakpoint( ">960px" ) {
      width: 33.33%;

      &:nth-child( 3n + 1 ) {
        border-left: 0;
      }

      &:nth-child( n + 4 ) {
        border-top: 1px solid lighten( $gray, 30% );
      }
    }

      width: 100%;

      &:nth-child( n + 2 ) {
        border-top: 1px solid lighten( $gray, 30% );
      }

      &.is-empty {
        display: none;
      }
  }

  .podcasts-browser-item {
    .plugin-icon {
      width: 48px;
      height: 48px;

      &.is-placeholder {
        animation: loading-fade 1.6s ease-in-out infinite;
      }
    }
  }

  .podcasts-browser-item__info {
    overflow: hidden; // lazy clearfix
  }

  .podcasts-browser-item__title,
  .podcasts-browser-item__author {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;

    .is-placeholder & {
      color: transparent;
      background-color: lighten( $gray, 30% );
      animation: loading-fade 1.6s ease-in-out infinite;
    }
  }

  .podcasts-browser-item__title {
    color: $gray-dark;
    font-weight: 600;
    font-size: rpx(30);
    margin-top: 3px;
  }

  .podcasts-browser-item__author {
    color: $gray;
    font-size: 12px;
  }

  .podcasts-browser-item .plugin-icon.is-placeholder,
  .podcasts-browser-item .plugin-icon[style*='undefined'] {
    &:before {
      width: 40px;
      height: 40px;
      font: normal 40px/40px Noticons;
    }
  }

  .podcasts-browser-item .plugin-icon {
    margin-right: 0;
  }

  .podcasts-browser-item  .rating {
    padding-top: 10px;
    position: absolute;
    bottom: 16px;
    left: 16px;
  }

  .podcasts-browser-item__published{
    display: flex;
    align-items: center;
    position: absolute;
    bottom: 16px;
    right: 16px;
    color: $alert-green;
    font-size: 11px;
    font-weight: 600;
    text-transform: uppercase;
    animation: appear .15s ease-in;

    .gridicon {
      margin-right: 3px;
    }
  }
  /**
   * List End:
   * ------
   * Marker that can be appended to indicate the end of a list (e.g. posts).
   */

  .list-end {
    position: relative;
    width: 100%;
    margin-top: (15 / 15) * 1em;
    text-align: center;
    &:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      border-bottom: solid 1px lighten( $gray, 25% );
    }
    &:after {
      color: $gray;
      font-size: (22 / 15) * 1em;
      padding: 0 (8 / 22) * 1em;
      background-color: $gray-light;
    }
  }

  @keyframes comment-detail__author-more-info {
    0% {
      display: none;
      transform: scaleY( 0 );
    }
    1% {
      display: block;
      transform: scaleY( 0 );
    }
    100% {
      transform: scaleY( 1 );
    }
  }


  .podcast {
    /*height: rpx(300);*/
    margin-top: rpx(30);
    &-section {
      /*heigth: rpx(300)*/
    }
    /*:last-child {*/
      /*margin-right: 30rpx;*/
    /*}*/

    &-content_card {
      transform:translate(rpx(30));
      display: inline-flex;
      .content {
        align-items: flex-start;
        height: rpx(220);
        padding: rpx(20);
        font-size: 26rpx;
        line-height: rpx(36);
        overflow: hidden;
        word-break:break-all;
        white-space: pre-line;
        display: -webkit-box;
        overflow: hidden;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
        /*height: rpx(200);*/
        text-overflow:ellipsis;//文字隐藏后添加省略号
      }
    }

    .episode {
      display: flex;
      white-space: nowrap;
      &-audio_card {
        min-width: rpx(380);
        display: block;
        position: relative;
        margin: 0 auto 10rpx auto;
        box-sizing: border-box;
        background: #fafafa;
        box-shadow: 0 0 0 1px transparentize(lighten($gray, 20%), .5),
        0 2px 4px lighten($gray, 30%);
        width: auto;
        /*max-width: rpx(500);*/
        transform:translate(rpx(30));
        margin-right: rpx(32);
        padding: rpx(24);
        display: inline-flex;
      }
    }
  }
  .upgrade-nudge {
    border-left: 3px solid $blue-wordpress;
    border-bottom-left-radius: 10rpx;
    border-top-left-radius: 10rpx;
    display: flex;
    padding: 12px 16px;

    .upgrade-nudge__title {
      font-size: 14px;
    }

    .button {
      margin-left: auto;
    }

    &.is-no-margin {
      margin: 0;
    }

    /*&.is-card-link {*/
      /*padding-right: 48px;*/
    /*}*/
  }

  .upgrade-nudge__icon {
    background: $blue-medium;
    border-radius: 50%;
    margin-right: 16px;
    color: $white;
    padding: 5px 7px 7px 5px;
    align-self: center;
    flex: 0 0 auto;
  }

  .upgrade-nudge.button {
    margin-bottom: 16px;
    text-align: left;
    display: inline-flex;

    .upgrade-nudge__icon {
      background: $alert-green;
    }

    &.is-full-width {
      width:100%;
      @include breakpoint( ">660px" ) {
        max-width: 420px;
      }
    }
  }

  .upgrade-nudge__title {
    color: $gray-dark;
    font-weight: 500;
  }

  .upgrade-nudge__message {
    color: $gray-text-min;
    font-size: 12px;
    display: block;
  }

  .plugin-meta__banner {
    position: relative;
    top: 0;
    left: -16px;
    width: calc( 100% + 32px );
    overflow: hidden;
    margin-top: -16px;
    margin-bottom: 16px;
    box-shadow: inset 0 0 2px 2px rgba( lighten( $gray, 10 ), 0.1 );
    background: rgba( lighten( $gray, 30 ), 0.3 );


    image {
      display: block;
      width: auto;
      max-height: rpx(288);
      margin: 0 auto;
    }

  }
  // ==========================================================================
  // Plugin icon
  // ==========================================================================

  .plugin-icon {
    float: left;
    margin-right: 16px;
    width: 56px;
    height: 56px;
    position: relative;
    transition: opacity .15s ease-in-out;

      width: 40px;
      height: 40px;

    .gridicon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate( -50%, -50% );
      width: 24px;
      height: 24px;
      fill: $white;
    }
    &.is-placeholder {
      background-color: lighten( $gray, 30% );
      animation: loading-fade 1.6s ease-in-out infinite;
      opacity: 0.3;
    }
    &.is-fallback {
      background: lighten( $gray, 20% );
    }
  }

  .plugin-icon__img {
    width: 100%;
    height: 100%;
  }

  .plugin-meta__information {
    display: flex;
    flex-direction: column;

    @include breakpoint( '>480px' ) {
      flex-direction: row;
    }
  }

  .plugin-meta__information {
    position: relative;
  }

  .plugin-meta__name {
    color: $gray-dark;
    font-size: 18px;
    font-weight: 600;
    line-height: 32px;
    white-space: pre;
    overflow: hidden;
    position: relative;

    &:after {
      @include long-content-fade( $size: 20% );
    }

    @include breakpoint( '>480px' ) {
      font-size: 24px;
    }

    .is-placeholder & {
      width: 200px;
      @include placeholder();
    }
  }

  .plugin-meta__detail {
    position: relative;
    flex-grow: 1;
    min-width: 0;
  }

  .plugin-meta__upgrade_nudge .upgrade-nudge.card {
    margin-top: 0;
  }

  .plugin-meta__meta {
    color: $gray;
    white-space: pre;
    text-overflow: ellipsis;
    float: left;

    .is-placeholder & {
      width: 120px;
      @include placeholder();
    }
  }

  .is-placeholder .plugin-meta__author {
    color: transparent !important;
  }

  .plugin-meta__actions {
    border-top: 1px solid lighten( $gray, 30% );
    flex-grow: 1;
    flex-shrink: 0;
    margin-top: 16px;
    padding-top: 16px;

    .has-button & {
      position: initial;
      right: inherit;
    }

      min-width: 22%;
      border: none;
      margin: 0;
      padding: 0;
      text-align: right;
      justify-content: flex-end;
      align-self: flex-start;

      .plugin-action {
        margin-top: 16px;
      }

      .plugin-action:first-child {
        margin-top: 8px;
      }

  }

  .plugin-meta__actions .plugin-activate-toggle__icon .gridicons-cog {
    transform: translate(-3px, -1px);
  }

  .plugin-meta__version-notice {
  }

  .plugin-meta__actions .plugin-item__count {
    justify-content: space-between;
    padding: 0;

      justify-content: flex-end;
  }

  .plugin-meta__actions .plugin-meta__active {
    color: $alert-green;
  }

  .card.plugin-meta__settings-link {
    margin-top: -16px;
    margin-bottom: 16px;
  }



  /* CARD HEADER*/

  .connected-application-item__header {

    display: flex;

    h3 {
      flex: 2;
      display: block;
      overflow: hidden;
      margin-top: 8px;
    }

    .order {
      display: block;
      //width: 48px;
      margin-top: 8px;
      text-align: center;
      height: 40px!important;
      width: 40px!important;
      /*cursor: pointer;*/
      /*transition: all 0.2s ease;*/
    }
    .connected-application-icon {
      width: 48px;
    }
  }

  .connected-application-item.is-placeholder {
    text {
      color: transparent;
      width: 36%;
      line-height: 24px;
      margin-top: 8px;
      background-color: lighten( $gray, 30% );
      animation: loading-fade 1.6s ease-in-out infinite;

      &:before {
        content: ' ';
      }
    }
  }

  .connected-application-item {
    text {
      font-weight: bold;
    }
  }

  .connected-application-item__meta {
    font-size: 12px;
    display: inline-block;
    padding: 4px 8px;
    margin-left: 8px;
    border-radius: 4px;
    background: $gray;
    color: $white;
    font-weight: normal;
  }

  .connected-application-item__connection-detail-descriptions {
    margin-left: 1.5em;
    margin-top: 4px;

    li {
      padding: 0;
    }
  }

  /* END HEADER*/
  /** POST IMAGE */
  /**
 * Post Image
 * - representative image displayed at the top of the post card located on post list pages (posts).
 */

  .post-image {
    position: relative;
    width: 100%;
    margin-top: 16px;
    background-color: $gray-light;
    text-align: center;

    &:first-child {
      margin-top: 0;
    }

    &:hover {
      cursor: zoom-out;
    }

    &.is-collapsed,
    &.is-placeholder {
      height: 144px;

      @include breakpoint( ">480px" ) {
        height: 232px;
      }
    }

    &.is-collapsed {
      background-size: cover;
      background-position: center;

      &:hover {
        cursor: zoom-in;
      }
    }

    &.is-placeholder {
      background-color: lighten( $gray, 30% );
      animation: loading-fade 1.6s ease-in-out infinite;
    }
  }

  .post-image__image {
    vertical-align: bottom;
  }
/***/
</style>
<template>

  <view>
    <view wx:if="{{currentTab === 0}}">
    <adswiper :config.sync="swiper"></adswiper>

    <view style="margin-bottom: 120rpx;">

    <repeat for="{{recommend}}" key="index" index="index" item="item">
      <podcast-header :item.sync="item" :id="testid"></podcast-header>
      <!--<podcast-card :item.sync="item"></podcast-card>-->

    </repeat>
    </view>
  </view>

    <!--<view class="list-end"></view>-->
    <me wx:if="{{currentTab === 1}}"></me>
    <tab-bar :active.sync="currentTab" :curplay.sync="curplay"/>
    <toast/>
  </view>
</template>

<script>

  /* eslint-disable no-undef,no-throw-literal */
  //  const items = require('../mocks/data.js')
  import wepy from 'wepy'
  //  import { service } from '../config.js'
  import http from '../mixins/http'
  import base from '../mixins/base'

  import Recommend from '../components/recommend'
  import AdSwiper from '../components/AdSwiper'
  //  import Detail from '../components/detail'
  import SectionHeader from '../components/section-header'
//  import Card from '../components/card'
  import FoldableCard from '../components/FoldableCard'

  import PodcastHeader from '../components/podcast-header'
  import PodcastCard from '../components/podcast-card'

  import Me from '../components/profile'
  import TabBar from '../components/TabBar'
  import Toast from 'wepy-com-toast'
  import {api} from '../config'
  import moment from 'moment'
  const device = wx.getSystemInfoSync()  //  获取设备信息
  const $wxapp = wepy.$instance
  export default class Index extends wepy.page {
    mixins = [base, http]
    config = {
//      'backgroundTextStyle': '#000',
      'navigationBarTitleText': '育儿柚道',
//      'navigationBarTextStyle': '#8392A7',
//      'navigationBarBackgroundColor': '#fff',
//      'disableScroll': true,
      'enablePullDownRefresh': false
    }
    components = {
      'podcast-card': PodcastCard,
      'podcast-header': PodcastHeader,
      'foldable-card': FoldableCard,
      'section-header': SectionHeader,
//      card: Card,
//      detail: Detail,
      adswiper: AdSwiper,
      recommend: Recommend,
      me: Me,
      'tab-bar': TabBar,
      toast: Toast
    }
    data = {
      testid: 'testid ....',
      current: {
        isExpanded: false
      },
      isExpanded: true,
      isCompact: true,
      toView: 'red',
      scrollTop: 100,
      items: [],
      userInfo: {
        nickName: '加载中...',
        avatarUrl: '../images/icon/icon-avatar@2px.png'
      },
      currentTab: 0,
      detail: {
        scrollHeight: device.windowHeight + 120
      },
      XORY: 'X',
      height: device.windowHeight,
      animationData: '',
      animationViewName: 'animationData',
      curplay: $wxapp.globalData.curplay,
      background: '',
      swiper: {},
      recommend: []
    }
    methods = {
      headerTapAction (index, item) {
        this.current.id = item.id
//        console.log(typeof item)
        if (Object.is(this.recommend[index].isExpanded, undefined)) {
          this.recommend[index].isExpanded = true
          return
        }
        this.recommend[index].isExpanded = !this.recommend[index].isExpanded
      },
      toAuthorPage (id) {
        wx.navigateTo({
          url: '/pages/author?id=' + id
        })
      },
      compact () {
      },
      tap (item) {
//        console.log(JSON.stringify(item))
        wx.navigateTo({
          url: '/pages/detail?id=' + item.id,
          success (res) {
          }
        })
      }
    }
    watch = {
      currentTab (old, newValue) {
        if (newValue === 0) {
          $wxapp.emitter.emit('onShowMe')
        }
      }
    }
    events = {
      'tab-change': (active, $event) => {
//        this.currentTab = active
//        this.$apply()
//        this.slideAnimation(0, 500)
      }
    }
    computed = {
//      expanded () {
//        return 'is-expanded'
//      }
//      swiperItems () {
//        return items
//      }
//      packages () {
//      },
//      identity () {
//      },
//      nickName () {
//        const info = this.getObject(this.userInfo)
//        return (info.nickName || info.avatarUrl) ? info.nickName : '未授权用户'
//      }
    }
    async loadList(item, parent) {
      await this.$get({url: 'http://api.picker.la/v1/app/S11SeYT2W/posts', data: {parent: parent}}, {
        success: ({code, data}) => {
          item.list = data
//          console.log(JSON.stringify(item.list))
          this.$apply()
        }
      })
    }
    async onLoad () {
      if (JSON.stringify($wxapp.globalData.options) === '{}') {
        await this.$request(api.common.options, {
          success: ({code, data}) => {
            this.swiper = data.swiper
//            console.log(JSON.stringify(this.swiper))
            $wxapp.$updateGlobalData('options', data)
          }
        })
      }
      await this.$request(api.common.recommend, {
        success: async ({code, data}) => {
          this.recommend = data.data
          for (let item of this.recommend) {
            item._ = {
              header_collapsed: false,
              expanded: true
            }
            item.modified = moment(item.modified).fromNow()
            await this.loadList(item, item.id)
            this.$apply()
          }
        }
      })
//      this.$get({
//        url: 'http://zy.picker.la/api/app/1/options/wxapp'
//      }, {
//        success: ({code, data}) => {
//          this.swiper = data.swiper
//          this.$apply()
//          console.log('lalala---')
//          console.log(JSON.stringify(data) + '-----')

//          console.log(JSON.stringify(data))
//        }
//      })
//      this.$get({
//        url: 'http://zy.picker.la/api/podcast/recommend'
//      }, {
//        success: ({code, data}) => {
//          self.swiper.items = data
//          self.swiper.slideLength = data.length
//          console.log(data.length)
//          this.$apply()
//          console.log('success')
//          for (let item of data) {
//            console.log(JSON.stringify(item))
//          }
//          console.log(JSON.stringify(data.data))
//        }
//      })
//      this.$getUserInfo((data) => {
//        self.userInfo = data
//      })
//      this.$parent.getUserInfo(function (userInfo) {
//        if (userInfo) {
//          self.userInfo = userInfo
//        }
//        console.log(self.userInfo)
//        self.$apply()
//      })
      this.curplay = {
        id: '2',
        anchor: {
          name: '叶青',
          avatar: 'https://media.alearning.com.cn/podcast/book/2/anchor.jpg'
        },
        songname: '交流密码：我说的你听懂了吗？（3-6岁）',
        status: 'stop',
        src: 'https://media.alearning.com.cn/podcast/book/2/202.mp3'
      }
      $wxapp.globalData.curplay = this.curplay
      $wxapp.emitter.emit('onload')
      $wxapp.emitter.on('tab-change', (active) => {
//        self.currentTab = active
        if (active === 1) {
          this.$invoke('me', 'onShow')
        }
//        self.$apply()
      })
    }

    onShow () {
      this.currentTab = 0
//      if ($wxapp.globalData.playing) {
//        this.showToolbar = false
//      }
      // this.$invoke('message', 'loadMessage')
    }

    slideAnimation (translate = 0, speed = 300, timingFunction = 'ease-in-out') {
      const REG = {
        TRANSLATE: /^(0|[1-9][0-9]*|-[1-9][0-9]*)$/,
        SPEED: /^(0|[1-9][0-9]*|-[1-9][0-9]*)$/,
        TIMINGFUNCTION: /linear|ease|ease-in|ease-in-out|ease-out|step-start|step-end/
      }

      const {XORY, animationViewName, consoleException} = this
      try {
        /**
         * 异常处理
         */
        if (!REG.TRANSLATE.test(translate)) throw 'paramType'
        if (!REG.SPEED.test(speed)) throw 'paramType'
        if (!REG.TIMINGFUNCTION.test(timingFunction)) throw 'paramType'
        /**
         * 创建一个动画实例
         */
        const animation = wx.createAnimation({
          transformOrigin: '50% 50% 0',
          duration: speed,
          timingFunction,
          delay: 0
        })
        animation[`translate${XORY}`](translate).step()  //  动画描述
        this.syncView(animationViewName, animation)  //  同步动画到视图
      } catch (err) {
        consoleException(err, 'slideAnimation[Function]')
      }
    }

    /**
     * 同步设置到视图
     * @param DEFAULT：默认参数
     * @param param：构造参数
     */
    syncView (viewName, prop) {
      this[`${viewName}`] = prop
//      console.log(viewName)
      this.$apply()
    }

    /**
     * 错误对照
     */
    consoleException (type, place) {
      const ERROR = {
        'paramType': '参数类型错误',
        'bound': '参数越界'
      }
      console.log(`%c${place}:${ERROR[type]}`, 'color: red')
    }

    onShareAppMessage () {
      return {
        title: '育儿柚道',
        desc: '育儿柚道-育儿有道！',
        path: '/pages/index'
      }
    }

    showToast (name) {
      let promise = this.$invoke('toast', 'show', {
        title: `${name}`,
        img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      })

      promise.then((d) => {
        console.log('toast done')
      })
    }
  }
</script>
