<style lang="scss">
  @import "./stylesheets/style";
</style>

<script>
  /* eslint-disable eol-last */

  // ENV
  const env = 'development' // 'development' or 'production'

  // APP VERSION
  const version = 'v1'

  // development and production host
  const hosts = {
    development: `http://api.picker.la/${version}`,
    production: `https://api.picker.cc/${version}`
  }
  const APPID = 'S11SeYT2W'
  const APP_API = `${hosts[env]}/app/${APPID}`

  /* eslint-disable no-undef,no-useless-return,no-unneeded-ternary,no-unused-vars,no-unused-expressions */

  import wepy from 'wepy'
  import mitt from 'mitt'
  import WxUtils from './utils/WxUtils'
  import 'wepy-async-function'
  import {api} from './config'

  export default class extends wepy.app {
    constructor () {
      super()
      // 注册中间件
      this.use('requestfix')
      this.use('promisify')
      // 处理全局请求 Header
      this.intercept('request', {
        config (p) {
          p.header = this.createAuthHeader()
          return p
        }
      })
      this.intercept('uploadFile', {
        config (p) {
          p.header = this.createAuthHeader()
          return p
        },
        success (p) {
          return p.data
        }
      })
    }

    /**
     * 构造权限头部
     */
    createAuthHeader () {
      const _token = wepy.$instance.globalData.auth._token
      const header = {}
      if (_token) {
        header['Authorization'] = `Bearer ${_token}`
      }
      return header
    }

    emitter = mitt()

    onLaunch (param) {
      // 校验SDK
      WxUtils.checkSDK()
      // 同步权限数据
      this.syncStoreConfig('_token')
//      this.syncStoreConfig('third_session');
      this.syncStoreConfig('user')

      // 获取保存场景值
      if (param && param.scene) {
        console.info('[scene]onLaunch scene', param.scene)
        wepy.$instance.globalData.scene = param.scene
        console.info('[auth]onLaunch end')
      }
      const that = this
      // 播放列表中下一首
      wx.onBackgroundAudioStop(() => {
        if (that.globalData.globalStop) {
          return
        }
        that.playNext()
      })

      wx.onBackgroundAudioPause(() => {
//        nt.postNotificationName('music_toggle', {
//          playing: false,
//          playtype: that.globalData.playtype,
//          music: that.globalData.curplay || {}
//        })
        this.emitter.emit('playing_pause', {
          playing: false,
          curplay: this.globalData.curplay || {}
        })
//        console.log('pause')
        that.globalData.playing = false
        this.globalData.globalStop = false
//        that.globalData.globalStop = that.globalData.hide ? true : false
        wx.getBackgroundAudioPlayerState({
          complete (res) {
            that.globalData.currentPosition = res.currentPosition ? res.currentPosition : 0
//            console.log(that.globalData.currentPosition)
          }
        })
      })
    }

    syncStoreConfig (key) {
      try {
        const value = wepy.getStorageSync(key)
        if (value !== '') {
          console.info(`[auth]${key} sync success `)
          wepy.$instance.globalData.auth[key] = value
        }
      } catch (e) {
        console.warn(`[auth]${key} sync fail `)
      }
    }

    config = {
      pages: [
        'pages/home/home'
      ],
      window: {
        backgroundTextStyle: 'dark',
        backgroundColor: '#F5F5F5'
      }
    }
    globalData = {
      auth: {},
      scene: '',
      appType: '',
      appName: '',
//      app_code: 'S11SeYT2W',
      baseUrl: APP_API,
      options: {},
      user: null,
      userInfo: null,
      hasLogin: false,
      hide: false,
      playlist: [],
      playindex: 0,
      list_am: [],
      index_am: 0,
      playing: false,
      playtype: 1,
      curplay: {
        id: '',
        authorInfo: {},
        title: {},
        url: '',
        play_status: 'stop',
        play_style: {}
      },
      shuffle: 1,
      globalStop: true,
      currentPosition: 0,
      staredList: []
    }
  }
</script>
